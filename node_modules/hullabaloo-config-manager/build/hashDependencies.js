"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const packageHash = require("package-hash");
const md5Hex = require("md5-hex");
const errors_1 = require("./errors");
const readSafe_1 = require("./readSafe");
function hashFile(filename, cache) {
    return __awaiter(this, void 0, void 0, function* () {
        const contents = yield readSafe_1.default(filename, cache);
        if (!contents)
            throw new errors_1.BadDependencyError(filename);
        return md5Hex(contents);
    });
}
function hashPackage(filename, fromPackage) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            return yield packageHash(`${fromPackage}/package.json`);
        }
        catch (err) {
            throw new errors_1.BadDependencyError(filename, err);
        }
    });
}
function hashDependency(filename, fromPackage, cache) {
    if (cache && cache.dependencyHashes.has(filename)) {
        return cache.dependencyHashes.get(filename);
    }
    const promise = fromPackage
        ? hashPackage(filename, fromPackage)
        : hashFile(filename, cache);
    if (cache) {
        cache.dependencyHashes.set(filename, promise);
    }
    return promise;
}
function hashDependencies(dependencies, cache) {
    const promises = dependencies.map(item => hashDependency(item.filename, item.fromPackage, cache));
    return Promise.all(promises);
}
exports.default = hashDependencies;
//# sourceMappingURL=hashDependencies.js.map